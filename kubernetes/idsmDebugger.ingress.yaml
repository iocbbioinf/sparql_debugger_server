
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: idsm-debugger-ingress7
  namespace: sparql
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "21600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "21600"
    nginx.ingress.kubernetes.io/eventsource: "true"
#    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
#    nginx.ingress.kubernetes.io/client-body-buffer-size: "1m"
#    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "1m"
    nginx.org/client-max-body-size: "10m"
    nginx.ingress.kubernetes.io/custom-http-errors: "502"
    nginx.ingress.kubernetes.io/ignore_invalid_headers: "on"
spec:
  tls:
    - hosts:
        - "idsm-debugger7.dyn.cloud.e-infra.cz"
      secretName: idsm-debugger7-dyn-cloud-e-infra-cz-tls
  rules:
    - host: "idsm-debugger7.dyn.cloud.e-infra.cz"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: idsm-debugger
                port:
                  number: 80
